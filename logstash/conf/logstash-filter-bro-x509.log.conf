input {
    stdin { 
        type => "stdin-type"
    }
}

filter {

    if "_grokparsefailure" in [tags] {
        drop { }
    }
    grok { 
        patterns_dir => "${BRO_ELK_PATH:/home/admin/bro-elk}/templates/logstash/patterns/"
        match => { "message" => "%{BRO_X509}" }
	    remove_field => ["message"]
        add_field => { "provider" => "x509_log" }
    }

    # clean the format
    mutate {
    	gsub => [ "certificate_not_valid_after", ".000000", "" ]
    }
    mutate {
    	gsub => [ "certificate_not_valid_before", ".000000", "" ]
    }
    mutate {
    	gsub => [ "certificate_exponent", "-", "0" ]
    }
    
    date {
	    # The date{} filter replaces the value of @timestamp
        # locale => "en"
        match => [ "ts","UNIX" ]
	    remove_field => [ "ts" ]
    }
}





output {
        if [type] == "stdin-type" {
            elasticsearch { 
                manage_template => true
                template => "${BRO_ELK_PATH:/home/admin/bro-elk}/templates/template_bro_x509.json"
                template_name => "ttbro-x509"
                hosts => ["bluepill:9200"]
                index => "ttbro-x509-%{+YYYY.MM.dd}"
            }
        }

#    if "_grokparsefailure" in [tags] {
        stdout { codec => rubydebug }
#    }
}
